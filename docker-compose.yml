version: "3.9"
services:
  dataportal-backend:
    image: dataportal-backend
    pull_policy: never
    build:
      context: ../dataportal
      dockerfile: backend/Dockerfile
      target: dev
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
      citation-service:
        condition: service_started
    volumes:
      - ../dataportal/backend:/app
      - ../dataportal/shared:/shared
      - ../dataportal-resources:/dataportal-resources
    env_file:
      - ../dataportal/backend/dev.env
    environment:
      - SS_MODE
    command: ["npm", "run", "start-dev"]
  dataportal-backend-test:
    image: dataportal-backend
    pull_policy: never
    ports:
      - "3001:3000"
      - "5921:5920"
    depends_on:
      db:
        condition: service_healthy
      dataportal-backend:
        condition: service_started
    volumes:
      - ../dataportal/backend:/app
      - ../dataportal/shared:/shared
    env_file:
      - ../dataportal/backend/test.env
    environment:
      - SS_MODE=test
    command: ["npm", "run", "start-test"]
  db:
    image: "postgres:13"
    volumes:
      - ./db/data:/var/lib/postgresql/data
      - ./db/initdb.d:/docker-entrypoint-initdb.d
    ports:
      - "54321:5432"
    environment:
      TZ: "Europe/Helsinki"
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      PGUSER: admin
    healthcheck:
     test: ["CMD", "psql", "-c", "select 1"]
     interval: 1s
     retries: 120
  dataportal-frontend:
    build:
      context: ../dataportal
      dockerfile: frontend/Dockerfile
      target: dev
    volumes:
      - ../dataportal/frontend:/app
      - ../dataportal/shared:/shared
    ports:
      - "8080:8080"
    environment:
      - VITE_BACKEND_URL=http://localhost:3000/api/
    depends_on:
      dataportal-backend:
        condition: service_started
  moto-server:
    image: "motoserver/moto:3.0.1"
  storage-service:
    build:
      context: ../storage-service
      target: dev
    ports:
      - "5900:5900"
    depends_on:
      db:
        condition: service_healthy
      moto-server:
        condition: service_started
    volumes:
      - ../storage-service:/app
    env_file:
      - .env
    environment:
      - SS_MODE
      - PGUSER=ss
      - PGDATABASE=ss
      - S3_ENDPOINT
      - S3_ACCESSKEYID
      - S3_SECRETACCESSKEY
    command: ["npm", "run", "start-dev"]
  pid-service:
    build:
      context: ../pid-service
      target: dev
    ports:
      - "5800:5800"
    env_file:
      - ../pid-service/.env
    volumes:
      - ../pid-service:/app
  cloudnet-processing:
    build: ../cloudnet-processing
    depends_on:
      - "dataportal-backend"
      - "storage-service"
      - "pid-service"
    volumes:
      - ../cloudnet-processing/scripts:/app/scripts
      - ../cloudnet-processing/src:/app/src
      - ../cloudnet-processing/tests:/app/tests
      - ../cloudnet-processing/download:/app/download
      - ../cloudnetpy:/cloudnetpy
    env_file:
      - ../cloudnet-processing/dev.env
    environment:
      INFLUXDB_URL: http://influxdb:8086
      INFLUXDB_ORG: cloudnet
      INFLUXDB_BUCKET: housekeeping
      INFLUXDB_TOKEN: super-secret-token
  citation-service:
    build:
      context: ../citation-service/service
      target: dev
    ports:
      - "3005:8080"
    volumes:
      - ../citation-service/service:/app
  influxdb:
    image: influxdb:2.3.0
    volumes:
      - ./influxdb/config.yml:/etc/influxdb2/config.yml
      - influxdb-data-volume:/var/lib/influxdb2
    ports:
      - 8086:8086
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: admin
      DOCKER_INFLUXDB_INIT_PASSWORD: password
      DOCKER_INFLUXDB_INIT_ORG: cloudnet
      DOCKER_INFLUXDB_INIT_BUCKET: housekeeping
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: super-secret-token

volumes:
  influxdb-data-volume:
